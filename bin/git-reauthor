#!/usr/bin/env bash

COMMAND=${0#*-}

OLD_EMAIL=
CORRECT_EMAIL=$( git config user.email )
CORRECT_NAME=$( git config user.name )
TARGET='both'

usage() {
  cat << EOF
usage: git ${COMMAND} [<options>]

Mandatory options
    -o, --old-email      <email>  define the old email to replace

Optional options
    -e, --correct-email  <email>  override the correct email to set
                                  default is Git user.email config value
    -n, --correct-name   <name>   override the correct name to set
                                  default is Git user.name config value
    -t, --target         <id>     define the target of the replacement
                                  author, committer, both (default)
EOF
}

error() {
  if [[ -n "$1" ]]; then
    local msg=$( echo "error: $1" | sed 's/\\n/\\n       /g' )
    echo -e "${msg}" >&2
  fi
  usage
  exit 1
}

reauthor() {
  export OLD_EMAIL
  export CORRECT_EMAIL
  export CORRECT_NAME
  export TARGET

  git filter-branch -f --env-filter '
    if ( [ "${TARGET}" = "both" ] || [ "${TARGET}" = "author" ] ) \
       && [ "${GIT_AUTHOR_EMAIL}" = "${OLD_EMAIL}" ]; then
      export GIT_AUTHOR_EMAIL="${CORRECT_EMAIL}"
      export GIT_AUTHOR_NAME="${CORRECT_NAME}"
    fi

    if ( [ "${TARGET}" = "both" ] || [ "${TARGET}" = "committer" ] ) \
       && [ "${GIT_COMMITTER_EMAIL}" = "${OLD_EMAIL}" ]; then
      export GIT_COMMITTER_EMAIL="${CORRECT_EMAIL}"
      export GIT_COMMITTER_NAME="${CORRECT_NAME}"
    fi
  ' --tag-name-filter cat -- --branches --tags
}

OPTIONS=$(
  getopt \
  --options e:hn:o:t: \
  --longoptions 'correct-email:,correct-name:,old-email:,target:' \
  --name "${COMMAND}" \
  -- "$@"
)

[[ $? -eq 0 ]] || error

eval set -- "${OPTIONS}"

while [[ "$#" -gt 0 ]]; do
  case "$1" in
    --correct-email|-e) CORRECT_EMAIL="$2"; shift 2 ;;
    -h) usage; exit 0 ;;
    --correct-name|-n) CORRECT_NAME="$2"; shift 2 ;;
    --old-email|-o) OLD_EMAIL="$2"; shift 2 ;;
    --target|-t) TARGET="$2"; shift 2 ;;
    --) shift ;;
    *) error "invalid option '$1'" ;;
  esac
done

[[ -n "${OLD_EMAIL}" ]] || error 'missing required --old-email option'

if [[ -z "${CORRECT_EMAIL}" ]]; then
  msg="missing correct email to set"
  msg="${msg}\nuse --correct-email option or set user.email in Git config"
  error "${msg}"
fi
if [[ -z "${CORRECT_NAME}" ]]; then
  msg="missing correct name to set"
  msg="${msg}\nuse --correct-name option or set user.name in Git config"
  error "${msg}"
fi

if [[ "${TARGET}" != 'both' ]] \
   && [[ "${TARGET}" != 'author' ]] \
   && [[ "${TARGET}" != 'committer' ]]; then
  error "invalid target '${TARGET}'"
fi

reauthor
