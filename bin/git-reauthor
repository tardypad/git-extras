#!/usr/bin/env bash

OLD_EMAIL=
CORRECT_EMAIL=
CORRECT_NAME=

usage() {
  cat << EOF
usage: git reauthor [<options>]

    -e, --correct-email  <email>  define the correct email to set
    -n, --correct-name   <name>   define the correct name to set
    -o, --old-email      <email>  define the old email to replace
EOF
}

error() {
  [[ -z "$1" ]] || echo "error: $1" >&2
  usage
  exit 1
}

reauthor() {
  export OLD_EMAIL
  export CORRECT_EMAIL
  export CORRECT_NAME

  git filter-branch -f --env-filter '
    if [ "${GIT_AUTHOR_EMAIL}" = "${OLD_EMAIL}" ]; then
      export GIT_AUTHOR_EMAIL="${CORRECT_EMAIL}"
      export GIT_AUTHOR_NAME="${CORRECT_NAME}"
    fi

    if [ "${GIT_COMMITTER_EMAIL}" = "${OLD_EMAIL}" ]; then
      export GIT_COMMITTER_EMAIL="${CORRECT_EMAIL}"
      export GIT_COMMITTER_NAME="${CORRECT_NAME}"
    fi
  ' --tag-name-filter cat -- --branches --tags
}

OPTIONS=$(
  getopt \
  --options e:hn:o: \
  --longoptions 'correct-email:,correct-name:,old-email:' \
  --name reauthor \
  -- "$@"
)

[[ $? -eq 0 ]] || error

eval set -- "${OPTIONS}"

while [[ "$#" -gt 0 ]]; do
  case "$1" in
    --correct-email|-e) CORRECT_EMAIL="$2"; shift 2 ;;
    -h) usage; exit 0 ;;
    --correct-name|-n) CORRECT_NAME="$2"; shift 2 ;;
    --old-email|-o) OLD_EMAIL="$2"; shift 2 ;;
    --) shift ;;
    *) error "invalid option '$1'" ;;
  esac
done

[[ -n "${OLD_EMAIL}" ]] || error "missing required old-email option"
[[ -n "${CORRECT_EMAIL}" ]] || error "missing required correct-email option"
[[ -n "${CORRECT_NAME}" ]] ||  error "missing required correct-name option"

reauthor
